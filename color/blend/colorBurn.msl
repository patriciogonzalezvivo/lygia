/*
contributors: Jamie Owen
description: Photoshop Color Burn blend mode mplementations sourced from this article on https://mouaif.wordpress.com/2009/01/05/photoshop-math-with-glsl-shaders/
use: blendColorBurn(<float|float3> base, <float|float3> blend [, <float> opacity])
license: MIT License (MIT) Copyright (c) 2015 Jamie Owen
*/

#ifndef FNC_BLENDCOLORBURN
#define FNC_BLENDCOLORBURN
float blendColorBurn(float base, float blend) { return (blend == 0.)? blend: max(float(1. - ((1. - base ) / blend)), float(0.0)); }
float3  blendColorBurn(float3 base, float3 blend) {
    return float3(blendColorBurn(base.r, blend.r),
                blendColorBurn(base.g, blend.g),
                blendColorBurn(base.b, blend.b));
}
float3  blendColorBurn(float3 base, float3 blend, float opacity) { return (blendColorBurn(base, blend) * opacity + base * (1. - opacity));}



half blendColorBurn(half base, half blend) { return (blend == 0.)? blend: max(half(1. - ((1. - base ) / blend)), half(0.0)); }
half3  blendColorBurn(half3 base, half3 blend) {
    return half3(blendColorBurn(base.r, blend.r),
                blendColorBurn(base.g, blend.g),
                blendColorBurn(base.b, blend.b));
}
half3  blendColorBurn(half3 base, half3 blend, half opacity) { return (blendColorBurn(base, blend) * opacity + base * (1. - opacity));}

#endif
