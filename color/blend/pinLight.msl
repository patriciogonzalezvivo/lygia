#include "lighten.msl"
#include "darken.msl"

/*
contributors: Jamie Owen
description: Photoshop PLight blend mode mplementations sourced from this article on https://mouaif.wordpress.com/2009/01/05/photoshop-math-with-glsl-shaders/
use: blendPinLight(<float|float3> base, <float|float3> blend [, <float> opacity])
license: MIT License (MIT) Copyright (c) 2015 Jamie Owen
*/

#ifndef FNC_BLENDPINLIGHT
#define FNC_BLENDPINLIGHT
float blendPinLight(float base, float blend) {
    return (blend < .5)? blendDarken(base, float(2.*blend)): blendLighten(base, float(2. * (blend - .5)));
}

float3 blendPinLight(float3 base, float3 blend) {
    return float3(blendPinLight(base.r, blend.r),
                blendPinLight(base.g, blend.g),
                blendPinLight(base.b, blend.b));
}

float3 blendPinLight(float3 base, float3 blend, float opacity) {
    return (blendPinLight(base, blend) * opacity + base * (1. - opacity));
}

half blendPinLight(half base, half blend) {
    return (blend < .5)? blendDarken(base, half(2.*blend)): blendLighten(base, half(2. * (blend - .5)));
}

half3 blendPinLight(half3 base, half3 blend) {
    return half3(blendPinLight(base.r, blend.r),
                blendPinLight(base.g, blend.g),
                blendPinLight(base.b, blend.b));
}

half3 blendPinLight(half3 base, half3 blend, half opacity) {
    return (blendPinLight(base, blend) * opacity + base * (1. - opacity));
}
#endif
