/*
contributors: Jamie Owen
description: Photoshop Reflect blend mode mplementations sourced from this article on https://mouaif.wordpress.com/2009/01/05/photoshop-math-with-glsl-shaders/
use: blendReflect(<float|float3> base, <float|float3> blend [, <float> opacity])
license: MIT License (MIT) Copyright (c) 2015 Jamie Owen
*/

#ifndef FNC_BLENDREFLECT
#define FNC_BLENDREFLECT
float blendReflect(float base, float blend) {
    return (blend == 1.)? blend : min(base * base / (1. - blend), 1.);
}

float3 blendReflect(float3 base, float3 blend) {
    return float3(blendReflect(base.r, blend.r),
                blendReflect(base.g, blend.g),
                blendReflect(base.b, blend.b));
}

float3 blendReflect(float3 base, float3 blend, float opacity) {
    return (blendReflect(base, blend) * opacity + base * (1. - opacity));
}

half blendReflect(half base, half blend) {
    return (blend == 1.)? blend : min(base * base / (1. - blend), 1.);
}

half3 blendReflect(half3 base, half3 blend) {
    return half3(blendReflect(base.r, blend.r),
                blendReflect(base.g, blend.g),
                blendReflect(base.b, blend.b));
}

half3 blendReflect(half3 base, half3 blend, half opacity) {
    return (blendReflect(base, blend) * opacity + base * (1. - opacity));
}
#endif
